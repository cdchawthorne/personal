alias ls='ls --color=auto --group-directories-first'

alias grep='grep --colour=auto'

alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'
alias lr='ls -lrt'
alias liesl='ls'
alias s='ls'
alias sl='ls'

function cd {
    builtin cd $@ && ls
}
alias d='cd'
alias c='cd'
alias dc='cd'

alias r='cd ~/documents/education/phd/research'
alias rlwrap='rlwrap -s 1000000'
alias math='rlwrap math'
alias ocaml='rlwrap ocaml'
alias sbcl='rlwrap sbcl'
alias sudo='sudo '
alias xargs='xargs '

function e {
    if [[ -n ${NVIM_LISTEN_ADDRESS} ]]; then
        ~/.local/bin/nvr $@
    else
        nvim $@
    fi
}
alias er='e -c ''edit $MYVIMRC'''
alias ez='e ~/.zsh_aliases'
alias sz='source ~/.zsh_aliases'
function ed {
    if [[ -n ${NVIM_LISTEN_ADDRESS} ]]; then
        ~/.local/bin/nvr $1
        ~/.local/bin/nvr -c diffthis
        ~/.local/bin/nvr -O $2
        ~/.local/bin/nvr -c diffthis 
    else
        nvim -d $@
    fi
}

alias man='man -i'
alias less='less -i'

alias rh='rehash'
alias settime='sudo zsh -c ''ntpd -q; hwclock -w'''
alias gpg='DISPLAY= gpg'

function timestamp {
    date +'%Y-%m-%d__%H-%M-%S'
}

function pa {
    if [[ $# -eq 0 ]]; then
        num=1
    else
        num=$1
    fi

    dest=.
    for i in $(seq ${num}); do
        dest=${dest}/..
    done
    cd ${dest}
}

function to {
    cd "$(dirname $1)"
}

function backup {
    if [[ $# -ge 2 ]]; then
        echo "USAGE: backup [full|incremental]" 1>&2
        return 1
    fi
    targets=(~/shared/media ~/data/documents ~/data/scratch \
             ~/.ssh ~/.gnupg /etc/fstab)
    include_flags=()
    for dir in ${targets}; do
        include_flags=(${include_flags} --include ${dir})
    done

    remote_machine=backups@cdchawthorne.com
    remote_path=backups/"$(hostname)"
    staging_path=${HOME}/data/backup_staging/duplicity
    password_db=${HOME}/shared/passwords/passwords.kdbx
    [[ $# -eq 1 && $1 == full ]] && mode=full || mode=incremental

    scp ${password_db} ${remote_machine}:${remote_path}

    # duplicity ${mode} --ssh-askpass --progress \
    #     ${include_flags} --exclude '**' / \
    #     sftp://${remote_machine}/${remote_path}/duplicity
    duplicity ${mode} --progress ${include_flags} --exclude '**' / \
      file://${staging_path}
    rsync -avP ${staging_path}/ ${remote_machine}:${remote_path}/duplicity
}

function x {
    if ! pgrep X &> /dev/null; then
        builtin cd
        command startx
    fi
}

function python {
    (
        export INPUTRC=${HOME}/.pyinputrc
        command python $@
    )
}

function usb-backup {
    if [[ $# -ne 1 ]]; then
        echo "USAGE: usb-backup target" 1>&2
        return 1
    fi

    targets=(${HOME}/documents ${HOME}/media ${HOME}/utilities
             ${HOME}/.gnupg ${HOME}/.pere ${HOME}/.ssh ${HOME}/.config
             ${HOME}/scratch ${HOME}/.pwsafe.dat)

    if ! rsync -avz --delete ${targets} $1; then
        echo "rsync failed; trying as sudo" 1>&2
        sudo rsync -avz --delete ${targets} $1
    fi
}

function a {
  cd ~/documents/education/undergrad/courses/$1
}
function b {
  cd ~/documents/education/masters/courses/$1
}
function f {
  cd ~/documents/education/phd/courses/$1
}
function t {
  cd ~/documents/education/phd/ta/$1
}
function m {
  pdf ~/documents/education/books/$1
}

function ruw {
    target='cdchawth@taurine.csclub.uwaterloo.ca:~/utilities/rsync_backups'
    # rsync -avz --delete ~/documents/education/masters ${target}
    rsync -avz --delete ~/documents/education/phd ${target}
}
function rbooks {
    target='cdchawth@taurine.csclub.uwaterloo.ca:~/utilities/rsync_backups'
    rsync -avz --delete ~/documents/education/books ${target}
}
